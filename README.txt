Задача 20
Написать программу, выполняющую разбиение неориентированного графа на две равные по количеству вершин части. Разбиение должно выполняться опираясь на следующие действия:
Первой вершиной части 1 и первой вершиной части 2 берутся две случайные вершины, не соединенные ребром (если таких нет, то это полный граф и тогда не важно какие вершины попадут в какую часть).
Очередной, выбирается случайная вершина. Если количество ребер, соединяющих ее с уже набранными в часть 1 вершинами, больше, чем с вершинами в части 2, то добавляем к части 1, а иначе, к части 2.
Особенности программы: Язык – C++; граф представлен списком дуг и хранится в файле input.txt (новая пара списка – новая строка файла); в файл result.txt записывается число, являющееся количеством дуг, идущих из одной части графа в другую (в первой строке) и наборы вершин, относящиеся к первой и второй части разбиения (вторая строка – вершины графа, относящиеся к части 1 разбиения, третья строка – вершины графа, относящиеся части 2 разбиения).

Комментарии к программе:
легко придумать данные, на которых алгоритм дает неверные результаты - 
пример 1:
0 1
0 2
1 3
2 3

0-1
| | - схематичный вид графа, алгоритм всегда разбивает вершины как 1/3
2-3

пример 2:
0 1
1 2
1 3
3 4
3 5

0     4
 \   /
  1-3    разбиение зависит от выбора начальных вершин, возможны варианты 1/5 и 3/3
 /   \
2     5

пример 3
0 1
0 2
1 2
1 4
2 3
3 4
3 5
4 5

   1-4
 / | |\
0  | | 5 разбиение зависит от выбора начальных вершин, возможны варианты 1/5 и 3/3
 \ | |/ 
   2-3

пример 4
0 1
0 5
1 2
2 3
3 4
4 5

0-1-2
|   | возможны любые комбинации - 2/4 1/5 3/3
5-4-3
